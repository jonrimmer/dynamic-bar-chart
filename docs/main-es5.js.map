{"version":3,"sources":["$_lazy_route_resource lazy namespace object","src/app/app-charts/app-charts.component.ts","src/app/app-charts/app-charts.component.html","src/app/app.component.ts","src/app/app.component.html","src/app/app.module.ts","src/app/bar-chart/bar-chart.component.ts","src/app/bar-chart/bar-chart.component.html","src/app/demo/demo.component.ts","src/app/demo/demo.component.html","src/environments/environment.ts","src/main.ts"],"names":[],"mappings":"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","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component, HostBinding, HostListener, Input } from '@angular/core';\nimport {\n  BarChartCategory,\n  BarChartSeries\n} from 'src/app/bar-chart/bar-chart.component';\n\n@Component({\n  selector: 'app-charts-container',\n  templateUrl: './app-charts.component.html',\n  styleUrls: ['./app-charts.component.scss']\n})\nexport class ChartsContainerComponent {\n  @HostBinding('style.--left-size.px')\n  public leftSize = null;\n\n  @HostBinding('style.--top-size.px')\n  public topSize = null;\n\n  private trackingX = false;\n  private trackingY = false;\n\n  @Input()\n  categories: BarChartCategory[];\n\n  @Input()\n  series: BarChartSeries[];\n\n  @HostListener('mousemove', ['$event'])\n  public onMove(e: MouseEvent) {\n    if (this.trackingX || this.trackingY) {\n      e.preventDefault();\n      e.stopPropagation();\n\n      // tslint:disable-next-line: no-bitwise\n      if (!(e.buttons & 1)) {\n        this.trackingX = this.trackingY = false;\n        return;\n      }\n\n      if (this.trackingX) {\n        this.leftSize = e.pageX - (e.currentTarget as any).offsetLeft;\n        return;\n      }\n\n      if (this.trackingY) {\n        this.topSize = e.pageY - (e.currentTarget as any).offsetTop;\n        return;\n      }\n    }\n  }\n\n  onVGrab(e: MouseEvent) {\n    e.preventDefault();\n    e.stopPropagation();\n    this.trackingX = true;\n  }\n\n  onHGrab(e: MouseEvent) {\n    e.preventDefault();\n    e.stopPropagation();\n    this.trackingY = true;\n  }\n}\n","<app-bar-chart\n  id=\"c1\"\n  [categories]=\"categories\"\n  [series]=\"series\"\n></app-bar-chart>\n<app-bar-chart\n  id=\"c2\"\n  [categories]=\"categories\"\n  [series]=\"series\"\n></app-bar-chart>\n<app-bar-chart\n  id=\"c3\"\n  [categories]=\"categories\"\n  [series]=\"series\"\n  xAxisLabel=\"GitHub Project\"\n  yAxisLabel=\"Count\"\n  title=\"GitHub Project Statistics\"\n>\n</app-bar-chart>\n\n<div class=\"grab v-grab\" (mousedown)=\"onVGrab($event)\"></div>\n<div class=\"grab h-grab\" (mousedown)=\"onHGrab($event)\"></div>\n","import { Component } from '@angular/core';\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { BarChartSeries, BarChartCategory } from './bar-chart/bar-chart.component';\nimport { Location } from '@angular/common';\n\nconst DEFAULT_REPOS = ['angular/angular', 'facebook/react', 'vuejs/vue'];\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent {\n  constructor(private http: HttpClient, public location: Location) {\n    DEFAULT_REPOS.forEach(repo => this.loadRepo(repo));\n  }\n\n  public repo: string;\n  public fakeData = false;\n  public rateLimit: string;\n\n  categories: BarChartCategory[] = [];\n  series: BarChartSeries[] = [\n    {\n      label: 'Subscribers',\n      color: '#11C591',\n    },\n    {\n      label: 'Forks',\n      color: 'rebeccapurple',\n    },\n    {\n      label: 'Issues',\n      color: '#ED4DAF',\n    },\n  ];\n\n  async addRepo() {\n    if (this.repo && this.repo.length) {\n      await this.loadRepo(this.repo);\n      this.repo = '';\n    }\n  }\n\n  removeRepo(repo: number) {\n    this.categories = this.categories.filter((_, i) => i !== repo);\n  }\n\n  async loadRepo(repo: string) {\n    const result = await (this.fakeData ? this.fakeRepo(repo) : this.loadGithubRepo(repo));\n\n    if (!result) {\n      return;\n    }\n\n    this.categories = [\n      ...this.categories,\n      {\n        label: result.full_name,\n        values: [result.subscribers_count, result.forks_count, result.open_issues],\n      },\n    ];\n  }\n\n  fakeRepo(repo: string) {\n    return Promise.resolve({\n      full_name: repo,\n      subscribers_count: Math.floor(Math.random() * 5000),\n      forks_count: Math.floor(Math.random() * 3000),\n      open_issues: Math.floor(Math.random() * 1000),\n    });\n  }\n\n  async loadGithubRepo(repo: string) {\n    try {\n      const response = await this.http\n        .get<any>(`https://api.github.com/repos/${repo}`, {\n          observe: 'response',\n        })\n        .toPromise();\n\n      this.rateLimit = `GitHub rate limit: ${response.headers.get(\n        'X-RateLimit-Remaining',\n      )} of ${response.headers.get('X-RateLimit-Limit')} remaining.`;\n\n      return response.body;\n    } catch (error) {\n      if (error instanceof HttpErrorResponse) {\n        if (error.status === 403) {\n          this.rateLimit = 'GitHub rate limit exceeded';\n          this.fakeData = true;\n          return this.fakeRepo(repo);\n        }\n\n        return null;\n      }\n    }\n  }\n}\n","<ng-container [ngSwitch]=\"location.path()\">\n  <ng-container *ngSwitchCase=\"'/dynamic-bar-chart/demo'\">\n    <app-demo></app-demo>\n  </ng-container>\n  <ng-container *ngSwitchDefault>\n    <form id=\"repos\" (submit)=\"addRepo()\">\n      <label>\n        Add repo:\n      </label>\n      <input type=\"text\" name=\"repo\" [(ngModel)]=\"repo\" placeholder=\"org/repo\" />\n\n      <label class=\"fake\">\n        <input name=\"fake\" type=\"checkbox\" [(ngModel)]=\"fakeData\" />\n        Fake data</label\n      >\n      <button\n        type=\"button\"\n        (click)=\"removeRepo(i)\"\n        *ngFor=\"let categories of categories; index as i\"\n      >\n        {{ categories.label }}\n      </button>\n      <span class=\"rate-limit\">{{ rateLimit }}</span>\n    </form>\n\n    <app-charts-container\n      id=\"charts\"\n      [categories]=\"categories\"\n      [series]=\"series\"\n    ></app-charts-container>\n  </ng-container>\n</ng-container>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { AppComponent } from './app.component';\nimport { BarChartComponent } from './bar-chart/bar-chart.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { ChartsContainerComponent } from 'src/app/app-charts/app-charts.component';\nimport { DemoComponent } from './demo/demo.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    BarChartComponent,\n    ChartsContainerComponent,\n    DemoComponent\n  ],\n  imports: [BrowserModule, FormsModule, HttpClientModule],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {}\n","import {\n  Component,\n  OnInit,\n  HostBinding,\n  Input,\n  ChangeDetectionStrategy\n} from '@angular/core';\n\nexport interface BarChartSeries {\n  label: string;\n  color: string;\n}\n\nexport interface BarChartCategory {\n  label: string;\n  values: number[];\n}\n\nconst { floor, ceil, log10, pow, min, max } = Math;\n\n/**\n * For a given number, round it up or down to a \"nice\" value.\n * Where a \"nice\" value is a power of ten multiple of 1, 2 or 5.\n */\nconst niceNum = (n: number, round: boolean) => {\n  const exp = floor(log10(n));\n  const frac = n / pow(10, exp);\n\n  let niceFrac: number;\n\n  if (round) {\n    niceFrac = frac <= 1 ? 1 : frac <= 2 ? 2 : frac <= 5 ? 5 : 10;\n  } else {\n    niceFrac = frac < 1.5 ? 1 : frac < 3 ? 2 : frac < 7 ? 5 : 10;\n  }\n\n  return niceFrac * pow(10, exp);\n};\n\nfunction* niceTicks(dataMin: number, dataMax: number, tickCount: number) {\n  // Round the range size up to a nice value.\n  const range = niceNum(dataMax - dataMin, false);\n\n  // Find a nice tick size for the new range.\n  const tickInterval = niceNum(range / (tickCount - 1), true);\n\n  // Round the min and max up and down respectively, based on the tick size.\n  const niceMin = floor(dataMin / tickInterval) * tickInterval;\n  const niceMax = ceil(dataMax / tickInterval) * tickInterval;\n\n  // Output all ticks between the nice min and max.\n  for (let v = niceMin; v <= niceMax + 0.5 * tickInterval; v += tickInterval) {\n    yield v;\n  }\n}\n\n@Component({\n  selector: 'app-bar-chart',\n  templateUrl: './bar-chart.component.html',\n  styleUrls: ['./bar-chart.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class BarChartComponent implements OnInit {\n  @HostBinding('style.--category-count')\n  public get categoryCount() {\n    return this.categories.length;\n  }\n\n  public categories: BarChartCategory[] = [];\n\n  @Input('categories')\n  public set categoriesInput(value: BarChartCategory[]) {\n    if (!value) {\n      return;\n    }\n\n    this.categories = value;\n\n    const values = value.flatMap(c => c.values);\n    const minValue = Math.min(...values);\n    const maxValue = Math.max(...values);\n    this.yTicks = [...niceTicks(minValue, maxValue, 10)];\n\n    this.maxValue = this.yTicks[this.yTicks.length - 1];\n  }\n\n  @Input()\n  public series: BarChartSeries[];\n\n  @Input()\n  public title: string;\n\n  @Input()\n  public xAxisLabel: string;\n\n  @Input()\n  public yAxisLabel: string;\n\n  @HostBinding('style.--max-value')\n  public maxValue = 1;\n\n  yTicks: number[] = [];\n\n  constructor() {}\n\n  ngOnInit() {}\n}\n","<ol class=\"legend\">\n  <li class=\"legend-item\" *ngFor=\"let s of series\" [style.--color]=\"s.color\">\n    {{ s.label }}\n  </li>\n</ol>\n\n<div class=\"x-axis\"></div>\n<div class=\"y-axis\">\n  <div class=\"y-tick\" *ngFor=\"let tick of yTicks\">\n    <div class=\"y-tick-value\">\n      {{ tick | number }}\n    </div>\n  </div>\n</div>\n\n<div *ngIf=\"title\" class=\"title\">\n  {{ title }}\n</div>\n\n<div *ngIf=\"xAxisLabel\" class=\"x-axis-label\">\n  {{ xAxisLabel }}\n</div>\n\n<div *ngIf=\"yAxisLabel\" class=\"y-axis-label\">\n  {{ yAxisLabel }}\n</div>\n\n<ng-container *ngFor=\"let category of categories; index as ci\">\n  <div class=\"category\" [style.grid-column]=\"'col-start ' + (ci + 1)\">\n    <div\n      class=\"bar\"\n      *ngFor=\"let value of category.values; index as di\"\n      [style.--value]=\"value\"\n      [style.--color]=\"series[di].color\"\n    ></div>\n  </div>\n  <div\n    class=\"category-label-container\"\n    [style.grid-column]=\"'col-start ' + (ci + 1)\"\n  >\n    <div class=\"category-label\">\n      <div class=\"label-text\">\n        {{ category.label }}\n      </div>\n    </div>\n  </div>\n</ng-container>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-demo',\n  templateUrl: './demo.component.html',\n  styleUrls: ['./demo.component.css']\n})\nexport class DemoComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<app-bar-chart\n  id=\"c1\"\n  title=\"Static Site Generators\"\n  yAxisLabel=\"Count\"\n  xAxisLabel=\"Project\"\n  [categories]=\"[\n    {\n      label: 'Next.js',\n      values: [42564, 5682, 304]\n    },\n    {\n      label: 'Gatsby',\n      values: [40166, 6671, 635]\n    },\n    {\n      label: 'Hugo',\n      values: [39513, 4467, 422]\n    },\n    {\n      label: 'Jekyll',\n      values: [39153, 8568, 158]\n    }\n  ]\"\n  [series]=\"[\n    {\n      label: 'Stars',\n      color: '#11C591'\n    },\n    {\n      label: 'Forks',\n      color: 'rebeccapurple'\n    },\n    {\n      label: 'Issues',\n      color: '#ED4DAF'\n    }\n  ]\"\n></app-bar-chart>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}